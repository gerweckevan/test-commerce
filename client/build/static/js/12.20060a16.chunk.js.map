{
    "version": 3,
    "sources": [
        "selectors/selector_list_products_filter_sorter.js",
        "components/Items-list-htags-labels.js",
        "components/Items-list-banner.js",
        "components/Items-list-sidebar.js",
        "components/Paginator.js",
        "components/Each-item-in-list.js",
        "components/Loading-gif.js",
        "components/Items-list.js",
        "containers/Items-list-container.js",
        "components/Button-link-gender-page.js"
    ],
    "names": [
        "selectorListFilterSorter",
        "createSelector",
        "state",
        "listFetchDataSuccess",
        "keywordsForFilter",
        "sortArgsForFilter",
        "sortSizeForFilter",
        "reducerPriceRangeFilter",
        "FilteredListByKeywords",
        "filter",
        "x",
        "some",
        "el",
        "tags",
        "includes",
        "y",
        "size",
        "price",
        "sort",
        "a",
        "b",
        "title",
        "ItemsListHtagsLabel",
        "priceLabel",
        "length",
        "style",
        "padding",
        "margin",
        "color",
        "sizeLabel",
        "sortLabel",
        "categoriesLabel",
        "map",
        "fontSize",
        "styles",
        "backgroundImage",
        "backgroundSize",
        "textShadow",
        "ItemsListBanner",
        "gender",
        "bannerCoverMenPc",
        "bannerCoverMenMobile",
        "bannerCoverWomenMobile",
        "bannerCoverWomenPc",
        "textBanner",
        "titleH1Pc",
        "backgroundJumbotron",
        "isMobile",
        "className",
        "subTitles",
        "marginTop",
        "ItemsListSidebar",
        "dispatchSize",
        "keywordsSelectAction",
        "categoriesProducts",
        "actionPriceRangeFilter",
        "oneKeywordForFilter",
        "actionFillFilters",
        "previousBtn",
        "currentPage",
        "onPageChange",
        "previous",
        "onClick",
        "nextBtn",
        "maxPages",
        "next",
        "Paginator",
        "aria-label",
        "Array",
        "i",
        "active",
        "spaceColumn",
        "marginLeft",
        "marginRight",
        "marginBottom",
        "border",
        "marginLeftBtn",
        "containerPaddingTop",
        "paddingTop",
        "EachItemInList",
        "FilteredSortedList",
        "itemsMaxPage",
        "slice",
        "md",
        "Link",
        "to",
        "_id",
        "split",
        "join",
        "top",
        "width",
        "src",
        "images",
        "alt",
        "position",
        "textAlign",
        "height",
        "backgroundColor",
        "boxShadow",
        "rating",
        "starDimension",
        "starSpacing",
        "starRatedColor",
        "numberOfStars",
        "name",
        "LoadingGif",
        "ItemsList",
        "match",
        "listIsLoading",
        "currentPageHandler",
        "dispatchToSortList",
        "params",
        "listLength",
        "loading_logic",
        "pagination",
        "Math",
        "ceil",
        "itemsListByGender_logic",
        "order",
        "display",
        "alignItems",
        "sideBar",
        "isBrowser",
        "xs",
        "Breadcrumbs",
        "selectedCategory",
        "textColor",
        "showSortBtn",
        "showFilterBtn",
        "ProductsListContainer",
        "props",
        "componentDidMount",
        "fetchDataApi",
        "setState",
        "Number",
        "isInteger",
        "render",
        "Component",
        "connect",
        "dispatch",
        "url",
        "actionSizeForFilter",
        "ButtonLinkGenderPage",
        "content",
        "buttonStylePc",
        "buttonStyleMobile"
    ],
    "mappings": "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",
    "file": "static/js/12.20060a16.chunk.js",
    "sourcesContent": [
        "import { createSelector } from 'reselect'\r\n\r\nconst listToFilter = state => state.listFetchDataSuccess\r\nconst argsForFilter = state => state.keywordsForFilter\r\nconst sortForFilter = state => state.sortArgsForFilter\r\nconst getSize = state => state.sortSizeForFilter\r\nconst getPriceRange = state => state.reducerPriceRangeFilter\r\n\r\nconst getFilteredList = (listFetchDataSuccess, keywordsForFilter, sortArgsForFilter, sortSizeForFilter, reducerPriceRangeFilter) => {\r\n  \r\n  const FilteredListByKeywords = listFetchDataSuccess.filter(x=>\r\n    keywordsForFilter.some(el => x.tags.includes(el))\r\n  )\r\n\r\n  const FilteredListBySize = sortSizeForFilter === 'All' ? FilteredListByKeywords :\r\n  FilteredListByKeywords.filter(y=>\r\n    y.size.includes(sortSizeForFilter)\r\n  )\r\n\r\n  const FilteredListByPriceRange = FilteredListBySize.filter(x => x.price <= reducerPriceRangeFilter)\r\n\r\n  return FilteredListByPriceRange.sort((a, b) => {\r\n    switch(sortArgsForFilter) {\r\n      case 'titleAsc': \r\n        if (a.title > b.title) return 1;\r\n        if (a.title < b.title) return -1;\r\n\r\n      case 'titleDesc':\r\n        if (a.title < b.title) return 1;\r\n        if (a.title > b.title) return -1;\r\n\r\n      case 'priceAsc':\r\n        if (a.price > b.price) return 1;\r\n        if (a.price < b.price) return -1;\r\n\r\n      case 'priceDesc':\r\n        if (a.price < b.price) return 1;\r\n        if (a.price > b.price) return -1;\r\n\r\n      default:\r\n        if (a.title > b.title) return 1;\r\n        if (a.title < b.title) return -1;\r\n    }\r\n  })\r\n}\r\n\r\n\r\nexport const selectorListFilterSorter = createSelector(\r\n  listToFilter,\r\n  argsForFilter,\r\n  sortForFilter,\r\n  getSize,\r\n  getPriceRange,\r\n  getFilteredList\r\n)\r\n\r\n\r\n\r\n",
        "import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { Badge } from 'reactstrap';\r\n\r\nconst propTypes = {\r\n  reducerPriceRangeFilter: PropTypes.number.isRequired,\r\n  sortArgsForFilter: PropTypes.string.isRequired,\r\n  sortSizeForFilter: PropTypes.string.isRequired,\r\n  keywordsForFilter: PropTypes.array.isRequired,\r\n};\r\n\r\nconst ItemsListHtagsLabel = ({\r\n  reducerPriceRangeFilter,\r\n  sortSizeForFilter,\r\n  keywordsForFilter,\r\n  sortArgsForFilter\r\n}) => {\r\n\r\n  const priceLabel = keywordsForFilter.length> 0 && <Badge style={{padding: '10px', margin:'10px'}} color='success'>{`#Price<${reducerPriceRangeFilter} $`} </Badge>\r\n  const sizeLabel = keywordsForFilter.length> 0 && <Badge style={{padding: '10px', margin:'10px'}} color='info'>{`#Size${sortSizeForFilter === 'All' ? 's' : ''}: ${sortSizeForFilter}`} </Badge>\r\n  const sortLabel = keywordsForFilter.length> 0 && <Badge style={{padding: '10px', margin:'10px'}} color='danger'>{`#Sort: ${sortArgsForFilter}`} </Badge>\r\n  const categoriesLabel = keywordsForFilter.map(x=><Badge style={{padding: '10px', margin:'10px'}} color='light' key={x}>{`#${x}`} </Badge>)\r\n  return (\r\n    <div style={{fontSize:'20px'}}>\r\n      { sortLabel }\r\n      { priceLabel }\r\n      { sizeLabel }\r\n      { categoriesLabel }\r\n    </div>\r\n  )\r\n};\r\n\r\nItemsListHtagsLabel.propTypes = propTypes;\r\n\r\nexport default ItemsListHtagsLabel;\r\n",
        "import PropTypes from 'prop-types';\r\nimport React from 'react'\r\nimport { \r\n  Jumbotron, \r\n  Container,\r\n} from 'reactstrap';\r\nimport {\r\n  isMobile\r\n} from \"react-device-detect\";\r\nimport ItemsListHtagsLabels from './Items-list-htags-labels'\r\n\r\nconst propTypes = {\r\n  gender: PropTypes.string,\r\n  reducerPriceRangeFilter: PropTypes.number,\r\n  sortArgsForFilter: PropTypes.string,\r\n  sortSizeForFilter: PropTypes.string,\r\n  keywordsForFilter: PropTypes.array,\r\n}\r\n\r\nconst styles={\r\n  bannerCoverMenPc: {\r\n    backgroundImage: 'url(\"/images/banner-men-pc.jpg\")',\r\n    backgroundSize: 'cover'\r\n  },\r\n  bannerCoverWomenPc: {\r\n    backgroundImage: 'url(\"/images/banner-women-pc.jpg\")',\r\n    backgroundSize: 'cover'\r\n  },\r\n  bannerCoverMenMobile: {\r\n    backgroundImage: 'url(\"/images/banner-men-mobile.jpg\")',\r\n    backgroundSize: 'cover'\r\n  },\r\n  bannerCoverWomenMobile: {\r\n    backgroundImage: 'url(\"/images/banner-women-mobile.jpg\")',\r\n    backgroundSize: 'cover'\r\n  },\r\n  textBanner: {\r\n    textShadow: \"3px 3px 3px grey\",\r\n    color:'white'\r\n  },\r\n  titleH1Pc: {\r\n    fontSize: '80px'\r\n  }\r\n}\r\n\r\nconst ItemsListBanner = ({\r\n  gender,\r\n  reducerPriceRangeFilter,\r\n  sortArgsForFilter,\r\n  sortSizeForFilter,\r\n  keywordsForFilter\r\n}) => {\r\n\r\n  const { bannerCoverMenPc, bannerCoverMenMobile, bannerCoverWomenMobile, bannerCoverWomenPc,  textBanner, titleH1Pc } = styles\r\n  const backgroundJumbotron = \r\n    isMobile && gender === 'men' ?  bannerCoverMenMobile :\r\n    isMobile && gender === 'women' ?  bannerCoverWomenMobile :\r\n    isMobile === false && gender === 'men' ? bannerCoverMenPc :\r\n    bannerCoverWomenPc\r\n\r\n  return (\r\n    <Jumbotron style={backgroundJumbotron}>\r\n      <Container style={textBanner}>\r\n        <h1 className=\"display-3\" style={titleH1Pc}>{gender === 'men' ? 'Artwork' : 'Merchandise' }</h1>\r\n        <ItemsListHtagsLabels \r\n          reducerPriceRangeFilter={reducerPriceRangeFilter}\r\n          sortArgsForFilter={sortArgsForFilter}\r\n          sortSizeForFilter={sortSizeForFilter}\r\n          keywordsForFilter={keywordsForFilter}\r\n        />\r\n      </Container>\r\n    </Jumbotron>\r\n  )\r\n};\r\n\r\nItemsListBanner.propTypes = propTypes;\r\n\r\nexport default ItemsListBanner;",
        "import PropTypes from 'prop-types';\r\nimport React from 'react'\r\nimport ItemsListFilterKeywords from './Item-list-filter-keywords'\r\nimport ItemsListFilterSize from './Items-list-filter-size'\r\nimport ProductListFilterPriceBar from './Item-list-filter-priceBar'\r\n\r\nconst propTypes = {\r\n  gender: PropTypes.string.isRequired, \r\n  dispatchSize: PropTypes.func.isRequired,\r\n  sortSizeForFilter: PropTypes.string.isRequired,\r\n  keywordsSelectAction: PropTypes.func.isRequired,\r\n  keywordsForFilter: PropTypes.array.isRequired, \r\n  categoriesProducts: PropTypes.object.isRequired,\r\n  actionPriceRangeFilter: PropTypes.func.isRequired,\r\n  reducerPriceRangeFilter: PropTypes.number.isRequired,\r\n  oneKeywordForFilter: PropTypes.func.isRequired,\r\n  actionFillFilters: PropTypes.func.isRequired\r\n};\r\n\r\nconst styles = {\r\n  subTitles:{\r\n    color: 'grey',\r\n    marginTop:'20px'\r\n  }\r\n}\r\n\r\nconst ItemsListSidebar = ({\r\n  gender, \r\n  dispatchSize, \r\n  sortSizeForFilter, \r\n  keywordsSelectAction, \r\n  keywordsForFilter, \r\n  categoriesProducts,\r\n  actionPriceRangeFilter,\r\n  reducerPriceRangeFilter,\r\n  oneKeywordForFilter,\r\n  actionFillFilters\r\n}) => (\r\n  <div>\r\n    <h4 style={styles.subTitles}>Categories</h4>\r\n      <ItemsListFilterKeywords \r\n        gender={gender} \r\n        keywordsForFilter={keywordsForFilter}\r\n        keywordsSelectAction={keywordsSelectAction}\r\n        categoriesProducts={categoriesProducts}\r\n        oneKeywordForFilter={oneKeywordForFilter}\r\n        actionFillFilters={actionFillFilters}\r\n      />\r\n    <h4 style={styles.subTitles}>Size</h4>\r\n      <ItemsListFilterSize \r\n        dispatchSize={dispatchSize} \r\n        sortSizeForFilter={sortSizeForFilter}\r\n      />\r\n    <h4 style={styles.subTitles}>Price {`< ${reducerPriceRangeFilter}$`}</h4>    \r\n      <ProductListFilterPriceBar \r\n        actionPriceRangeFilter={actionPriceRangeFilter}\r\n        reducerPriceRangeFilter={reducerPriceRangeFilter}\r\n      />\r\n  </div>\r\n)\r\n\r\nItemsListSidebar.propTypes = propTypes;\r\n\r\nexport default ItemsListSidebar;\r\n\r\n",
        "import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { \r\n  Pagination, \r\n  PaginationItem, \r\n  PaginationLink \r\n} from 'reactstrap';\r\n\r\nconst propTypes = {\r\n  currentPage: PropTypes.number,\r\n  maxPages: PropTypes.number,\r\n  onPageChange: PropTypes.func\r\n}\r\n\r\nconst previousBtn = (currentPage, onPageChange) => currentPage > 1 && <PaginationLink previous onClick={()=>onPageChange('previous')}/>\r\nconst nextBtn = (currentPage, maxPages, onPageChange) => currentPage < maxPages && <PaginationLink next onClick={()=>onPageChange('next')}/>\r\n\r\nconst Paginator = ({currentPage, maxPages, onPageChange}) => (\r\n\r\n  <Pagination aria-label=\"Page navigation example\">\r\n    <PaginationItem>\r\n      {previousBtn(currentPage, onPageChange)}\r\n    </PaginationItem>\r\n    {[...Array(maxPages)].map((x, i) =>(          \r\n      <PaginationItem key={i+1} active={currentPage === i+1}>\r\n        <PaginationLink onClick={()=>onPageChange(i)}>\r\n          {i+1}\r\n        </PaginationLink>\r\n      </PaginationItem>\r\n    )\r\n    )}\r\n    \r\n    <PaginationItem>\r\n      {nextBtn(currentPage, maxPages, onPageChange)}\r\n    </PaginationItem>\r\n  </Pagination>);\r\n\r\nPaginator.propTypes = propTypes;\r\n\r\nexport default Paginator;",
        "import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport StarRatings from 'react-star-ratings';\r\nimport { \r\n  Col,\r\n  Card, \r\n  CardImg\r\n} from 'reactstrap';\r\n\r\nconst propTypes = {\r\n  FilteredSortedList: PropTypes.array.isRequired,\r\n  currentPage: PropTypes.number.isRequired,\r\n  itemsMaxPage: PropTypes.number.isRequired\r\n};\r\n\r\nconst styles = {\r\n  spaceColumn: {\r\n    marginLeft: '25px',\r\n    marginRight: '25px',\r\n    marginBottom: '50px',\r\n    border: 'none'\r\n  },\r\n  fontSize: {\r\n    fontSize: '15px'\r\n  },\r\n  marginLeftBtn: {\r\n    marginLeft: '30px'\r\n  },\r\n  containerPaddingTop: {\r\n    paddingTop: '35px'\r\n  }\r\n};\r\n\r\nconst EachItemInList = ({\r\n  FilteredSortedList,\r\n  currentPage,\r\n  itemsMaxPage\r\n}) => {  \r\n  return (FilteredSortedList.slice((currentPage-1)*itemsMaxPage,itemsMaxPage*currentPage).map(x => \r\n    <Col md=\"4\" key={x._id}> \r\n      <Card style={styles.spaceColumn}>\r\n        <Link to={`/item/${x._id}/${x.title.split(' ').join('-')}`} className=\"text-white\">\r\n          <CardImg top width=\"100%\" src={x.images[0]} alt=\"Card image cap\" />\r\n        </Link>\r\n          <div>\r\n            <div style={{position: 'absolute', top: 0, textAlign: 'center', width: '100%'}}>{x.color.map(x=><div key={x} style={{width:'20px', height:'20px', backgroundColor:x, boxShadow: '0px 0px 14px -4px rgba(0,0,0,0.75)'}}/>)}</div>\r\n            <p style={{margin:'auto'}}>{x.title}</p>\r\n            <StarRatings\r\n              rating={x.rating}\r\n              starDimension=\"15px\"\r\n              starSpacing=\"1px\"\r\n              starRatedColor=\"#072a48\"\r\n              // changeRating={this.changeRating}  <-- uncomment to transform in input\r\n              numberOfStars={5}\r\n              name='rating'\r\n              />\r\n            <p className=\"text-muted\">{x.price} $</p>\r\n          </div>\r\n      </Card>\r\n    </Col>\r\n  ));\r\n};\r\n\r\nEachItemInList.propTypes = propTypes;\r\n\r\nexport default EachItemInList;\r\n\r\n\r\n\r\n",
        "import React from 'react'\r\n\r\nconst LoadingGif = () => <div style={{margin:'auto'}}><img src='/images/gifLoading.gif' alt=\"\" /></div>\r\n\r\nexport default LoadingGif\r\n",
        "import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { isBrowser, isMobile } from \"react-device-detect\";\r\nimport ItemsListBanner from './Items-list-banner';\r\nimport Breadcrumbs from './Breadcrumbs';\r\nimport ItemsListSidebar from './Items-list-sidebar';\r\nimport Paginator from './Paginator';\r\nimport EachItemInList from './Each-item-in-list'; \r\nimport LoadingGif from './Loading-gif';\r\nimport ButtonLinkGenderPage from './Button-link-gender-page'\r\nimport { \r\n  Container,\r\n  Row,\r\n  Col\r\n} from 'reactstrap';\r\n\r\nconst propTypes = {\r\n  listIsLoading: PropTypes.bool.isRequired, \r\n  FilteredSortedList: PropTypes.array.isRequired, \r\n  keywordsForFilter: PropTypes.array.isRequired, \r\n  oneKeywordForFilter: PropTypes.func.isRequired,\r\n  currentPageHandler: PropTypes.func.isRequired,\r\n  currentPage: PropTypes.number.isRequired,\r\n  itemsMaxPage: PropTypes.number.isRequired,\r\n  dispatchSize: PropTypes.func.isRequired,\r\n  sortSizeForFilter: PropTypes.string.isRequired,\r\n  sortArgsForFilter: PropTypes.string.isRequired,\r\n  dispatchToSortList: PropTypes.func.isRequired,\r\n  keywordsSelectAction: PropTypes.func.isRequired,\r\n  categoriesProducts: PropTypes.object.isRequired,\r\n  actionPriceRangeFilter: PropTypes.func.isRequired,\r\n  reducerPriceRangeFilter: PropTypes.number.isRequired,\r\n  actionFillFilters: PropTypes.func.isRequired\r\n}\r\n\r\nconst styles = {\r\n  spaceColumn: {\r\n    marginLeft: '25px',\r\n    marginRight: '25px',\r\n    marginBottom: '50px'\r\n  },\r\n  fontSize: {\r\n    fontSize: '15px'\r\n  },\r\n  marginLeftBtn: {\r\n    marginLeft: '30px'\r\n  },\r\n  containerPaddingTop: {\r\n    paddingTop: '35px'\r\n  }\r\n};\r\n\r\nconst ItemsList = ({\r\n  match, \r\n  listIsLoading,\r\n  FilteredSortedList,\r\n  keywordsForFilter,\r\n  oneKeywordForFilter,\r\n  currentPageHandler,\r\n  currentPage,\r\n  itemsMaxPage,\r\n  dispatchSize,\r\n  sortSizeForFilter,\r\n  sortArgsForFilter,\r\n  dispatchToSortList,\r\n  keywordsSelectAction,\r\n  categoriesProducts,\r\n  actionPriceRangeFilter,\r\n  reducerPriceRangeFilter,\r\n  actionFillFilters\r\n}) => {\r\n\r\n  const { gender } = match.params;\r\n  const listLength = FilteredSortedList.length\r\n\r\n  const loading_logic = listIsLoading && <LoadingGif />;\r\n\r\n  const pagination = Math.ceil(listLength/itemsMaxPage)>1 ? \r\n    (<Paginator  \r\n      maxPages={Math.ceil(listLength/itemsMaxPage)} \r\n      currentPage={currentPage} \r\n      itemsMaxPage={itemsMaxPage} \r\n      onPageChange={currentPageHandler}\r\n    />) : \r\n    currentPage > 1 && (()=> currentPageHandler('empty'))()\r\n\r\n\r\n\r\n  const itemsListByGender_logic = \r\n    \r\n    <Col md={{ size: 9, order: 1 }}>\r\n      {listIsLoading === false && <i>Results: {listLength}</i>}\r\n      {FilteredSortedList.length === 0 && listIsLoading === false && \r\n      <div style={{ display: 'flex', alignItems: 'center'}}>\r\n        <h2><i>Select a category: </i> </h2>\r\n        <ButtonLinkGenderPage gender='men'/>\r\n        <ButtonLinkGenderPage gender='women'/>\r\n      </div>}\r\n\r\n      <Row>\r\n        {loading_logic} {/* if list is loading show loader */}\r\n        <EachItemInList \r\n          FilteredSortedList={FilteredSortedList} \r\n          currentPage={currentPage}\r\n          itemsMaxPage={itemsMaxPage}\r\n          currentPageHandler={currentPageHandler}\r\n          listIsLoading={listIsLoading}\r\n        />\r\n      </Row>\r\n      {pagination}\r\n    </Col>;\r\n\r\n    const sideBar =  isBrowser &&\r\n    <Col md=\"3\" xs='12'>\r\n      <Row>\r\n        <ItemsListSidebar \r\n          keywordsForFilter={keywordsForFilter} \r\n          dispatchSize={dispatchSize}\r\n          sortSizeForFilter={sortSizeForFilter}\r\n          keywordsSelectAction={keywordsSelectAction}\r\n          categoriesProducts={categoriesProducts}\r\n          actionPriceRangeFilter={actionPriceRangeFilter}\r\n          reducerPriceRangeFilter={reducerPriceRangeFilter}\r\n          oneKeywordForFilter={oneKeywordForFilter}\r\n          gender={gender}\r\n          actionFillFilters={actionFillFilters}\r\n        />\r\n      </Row>\r\n    </Col>;\r\n\r\n\r\n  return (\r\n    <div>\r\n      <ItemsListBanner \r\n        gender={gender} \r\n        reducerPriceRangeFilter={reducerPriceRangeFilter}\r\n        sortSizeForFilter={sortSizeForFilter}\r\n        keywordsForFilter={keywordsForFilter}\r\n        sortArgsForFilter={sortArgsForFilter}\r\n      />\r\n      <Breadcrumbs \r\n        selectedCategory={keywordsForFilter} \r\n        keywordsForFilter={keywordsForFilter}\r\n        sortArgsForFilter = {sortArgsForFilter}\r\n        dispatchToSortList = {dispatchToSortList}\r\n        gender={gender} \r\n        backgroundColor={'#072a48'}\r\n        textColor={'white'}\r\n        marginTop={-34}\r\n        showSortBtn={keywordsForFilter.length > 0}\r\n        showFilterBtn={isMobile}\r\n        dispatchSize={dispatchSize}\r\n        sortSizeForFilter={sortSizeForFilter}\r\n        keywordsSelectAction={keywordsSelectAction}\r\n        categoriesProducts={categoriesProducts}\r\n        actionPriceRangeFilter={actionPriceRangeFilter}\r\n        reducerPriceRangeFilter={reducerPriceRangeFilter}\r\n        listLength={listLength}\r\n      />\r\n      <Container style={styles.containerPaddingTop}>\r\n        <Row>\r\n          {itemsListByGender_logic} {/* show list depending on gender  */}\r\n          {sideBar}\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nItemsList.propTypes = propTypes;\r\n\r\nexport default ItemsList;\r\n",
        "import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { \r\n  sortArgsForFilter, \r\n  keywordsForFilter, \r\n  actionSizeForFilter,\r\n  oneKeywordForFilter, \r\n  fetchDataApi,\r\n  actionPriceRangeFilter,\r\n  actionFillFilters\r\n} from '../actions/DataFetchingActions';\r\nimport { selectorListFilterSorter } from '../selectors/selector_list_products_filter_sorter';\r\nimport ItemsList from '../components/Items-list';\r\n\r\nclass ProductsListContainer extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      currentPage: 1,\r\n      itemsMaxPage: 9\r\n    };\r\n  };\r\n\r\n  componentDidMount = () => this.props.fetchDataApi('/api/productsdata');\r\n\r\n\r\n  currentPageHandler = x => {\r\n    const { currentPage } = this.state;\r\n    x === 'next' ? this.setState({currentPage: currentPage + 1}) :\r\n    x === 'previous' ? this.setState({currentPage: currentPage - 1} ) : \r\n    x === 'empty' ? this.setState({currentPage: 1}) : \r\n    Number.isInteger(x) && this.setState({currentPage: x + 1}); \r\n  };\r\n  \r\n  render = () => <ItemsList \r\n      {...this.props} \r\n      {...this.state} \r\n      currentPageHandler={this.currentPageHandler} \r\n    />\r\n  \r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  const { keywordsForFilter, sortSizeForFilter, categoriesProducts, listIsLoading, reducerPriceRangeFilter,sortArgsForFilter } = state;\r\n  return {\r\n    listIsLoading,\r\n    FilteredSortedList: selectorListFilterSorter(state),\r\n    reducerPriceRangeFilter,\r\n    keywordsForFilter,\r\n    sortSizeForFilter,\r\n    sortArgsForFilter,\r\n    categoriesProducts\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchDataApi: url => dispatch(fetchDataApi(url)),\r\n  oneKeywordForFilter: x => dispatch(oneKeywordForFilter(x)),\r\n  actionFillFilters: x => dispatch(actionFillFilters(x)),\r\n  dispatchSize: x => dispatch(actionSizeForFilter(x)), \r\n  actionPriceRangeFilter: x => dispatch(actionPriceRangeFilter(x)), \r\n  dispatchToSortList: x => dispatch(sortArgsForFilter(x)),\r\n  keywordsSelectAction: x => dispatch(keywordsForFilter(x))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductsListContainer);\r\n\r\n",
        "import PropTypes from 'prop-types';\r\nimport React from 'react'\r\nimport {\r\n  isMobile\r\n} from \"react-device-detect\";\r\nimport { Button } from 'reactstrap';\r\nimport { Link } from 'react-router-dom' \r\n\r\nconst propTypes = {\r\n  gender: PropTypes.string.isRequired\r\n};\r\n\r\nconst styles = {\r\n  centerButtons: {\r\n    textAlign: 'center',\r\n    padding: '30px'\r\n  },\r\n  buttonStylePc: {\r\n    margin:'20px',\r\n    padding: '15px'\r\n  },\r\n  buttonStyleMobile: {\r\n    margin:'5px',\r\n    padding: '15px'\r\n  }\r\n}\r\n\r\nconst ButtonLinkGenderPage = ({gender, content=gender}) => {\r\n\r\n  const {buttonStylePc, buttonStyleMobile } = styles\r\n  \r\n  return <Link to={`/category/${gender}`} className=\"text-white\"><Button size={isMobile ? 'md' : 'lg'} color=\"light\" style={isMobile ? buttonStyleMobile : buttonStylePc}>{content}</Button></Link>\r\n}\r\n\r\nButtonLinkGenderPage.propTypes = propTypes;\r\n\r\nexport default ButtonLinkGenderPage"
    ],
    "sourceRoot": ""
}